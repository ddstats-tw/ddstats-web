{% extends "pages/player/base.njk" %}
{% import "components/utils.njk" as utils %}

{% block player %}
<div class="container">
    <div class="box">
        <div class="graph">
            <canvas id="pointsChart"></canvas>
        </div>
    </div>
</div>

<div class="container left-bigger">
    <div class="box">
        <h2 style="float: left">Last finishes</h2>
        <a class="show-more" href="/player/{{ player | urlencode | safe }}/overview/finishes">Show more</a>
        <table class="transparent">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Server</th>
                    <th></th>
                    <th>Map</th>
                    <th>Time</th>
                </tr>
            </thead>
            <tbody>
                {% for finish in lastFinishes %}
                <tr>
                    <td>{{ finish.Timestamp }}</td>
                    <td><img height="17rem" src="https://ddnet.org/countryflags/{{ finish.Flag }}.png"</td>
                    <td>{{ finish.Server }}</td>
                    <td><a href="/map/{{ finish.Map | urlencode | safe }}">{{ finish.Map }}</a></td>
                    <td>{{ fancy_time(finish.Time) }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <div class="box">
        <h2 style="float: left">Favourite partners</h2>
        <a class="show-more" href="/player/{{ player | urlencode | safe }}/overview/partners">Show more</a>
        <table class="transparent">
            <thead>
                <tr>
                    <th>Player</th>
                    <th>Finishes together</th>
                </tr>
            </thead>
            <tbody>
                {% for player in teamPartners %}
                <tr>
                    <td><a href="/player/{{ player.Name | urlencode }}">{{ player.Name }}</a></td>
                    <td>{{ player.Amount }} ranks</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<script>
    function formatNumber(value) {
        if (value >= 1000000000 || value <= -1000000000) {
            return value / 1e9 + 'B';
        } else if (value >= 1000000 || value <= -1000000) {
            return value / 1e6 + 'M';
        } else if (value >= 1000 || value <= -1000) {
            return floor10(value / 1e3, -1) + 'K';
        }
        return value;
    }

    const ctx = document.getElementById('pointsChart');
    const data = [
        {% if rankedPointsGraph | length %}
        { x: "{{ pointsGraph[0].date }}", y: 0, y2: 0 },
        {% for row in rankedPointsGraph %}
        { x: "{{ row.date }}", y: {{ row.rankpoints }}, y2: {{ row.teampoints }} },
        {% endfor %}
        { x: "{{ current_date() }}", y: {{ (rankedPointsGraph | last).rankpoints }}, y2: {{ (rankedPointsGraph | last).teampoints }} }
        {% endif %}
    ];

    const data2 = [
        {% for row in pointsGraph %}
        { x: "{{ row.date }}", y: {{ row.points }} },
        {% endfor %}
        { x: "{{ current_date() }}", y: {{ (pointsGraph | last).points }} }
    ];

    Chart.defaults.color = "#E0E0FF"
    Chart.defaults.font.family = "'Roboto Regular', sans-serif"
    Chart.defaults.font.size = 12

    new Chart(
        ctx,
        {
            type: 'line',
            data: {
                datasets: [{
                    label: 'Rank Points',
                    data: data,
                    fill: false,
                    borderColor: '#4C9CEF',
                    tension: 0,
                    pointRadius: 0
                },
                {
                    label: 'Team Points',
                    data: data,
                    fill: false,
                    borderColor: '#EF5255',
                    tension: 0,
                    pointRadius: 0,
                    parsing: {
                        yAxisKey: 'y2'
                    }
                },
                {
                    label: 'Points',
                    data: data2,
                    fill: false,
                    borderColor: '#EFB1F1',
                    tension: 0,
                    pointRadius: 0,
                }]
            },
            options: {
                maintainAspectRatio: false,
                spanGaps: true,
                animation: false,
                plugins: {
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                    },
                    title: {
                        display: true,
                        align: 'start',
                        text: "Points graph",
                        padding: {
                            top: 0,
                            bottom: 0
                        },
                        font: {
                            weight: 'bold',
                            size: 23,
                        },
                    }
                },
                hover: {
                    mode: 'nearest',
                    intersect: false
                },
                scales: {
                    x: {
                        grid: {
                            color: "#30304F"
                        },
                        ticks: {
                            font: {
                                weight: 'bold',
                                size: 20,
                            }
                        },
                        type: 'time',
                        time: {
                            unit: 'year'
                        },
                    },
                    y: {
                        suggestedMax: 250,
                        grid: {
                            color: "#30304F"
                        },
                        ticks: {
                            font: {
                                size: 17,
                            }
                        }
                    }
                }
            }
        }
    );
</script>

{% endblock %}
